{"version":3,"sources":["components/Button.tsx","utils/constants.ts","styles.ts","components/Grid.tsx","components/DropTable.tsx","components/Images.tsx","components/Input.tsx","utils/parsing.ts","utils/table.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledButton","styled","button","Button","children","handleClick","onClick","ADD_BEFORE_IMG","ADD_AFTER_IMG","RESET","EDIT","EDIT_ENDED","ADD_ROW","DELETE_ROW","device","margin","phoneDouble","BASE","tabletDouble","desktopDouble","phone","tablet","desktop","phoneHalf","tabletHalf","desktopHalf","phoneQuarter","tabletQuarter","desktopQuarter","Row","div","BottomRow","Col","ColSpacer","ColSpacerMini","StyledCell","StyledTitle","StyledImg","img","BorderRow","Cell","id","action","dispatch","defaultDrag","e","preventDefault","stopPropagation","onDrop","type","imgSrc","dataTransfer","getData","handleDrop","onDragOver","onDragEnter","onDragLeave","RowTitle","editing","title","useState","value","setValue","placeholder","onChange","target","DropTable","data","map","name","i","rows","beforeImg","afterImg","src","ImagesContainer","Images","images","imageName","url","alt","TextArea","textarea","StyledContainer","Input","readOnly","getTextInFinalParentheses","item","slice","lastIndexOf","HEADER_ROWS","getWidth","BodyContainer","initialCellData","reducer","state","index","findIndex","row","nanoid","filter","App","useReducer","setImages","output","setOutput","page","setPage","incrementPage","decrementPage","className","inputText","textInput","split","text","trim","indexOf","extractNamesAndUrls","length","height","width","reduce","createMarkdownTable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEMA,EAAeC,IAAOC,OAAV,mUAiBLC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,YAAb,OACpB,cAACL,EAAD,CAAcM,QAASD,EAAvB,SAAqCD,KCpB1BG,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAQ,QACRC,EAAO,OACPC,EAAa,aACbC,EAAU,UACVC,EAAa,aCJbC,EAEU,qBAFVA,EAIG,sBAIHC,EAAS,CACpBC,YAAY,GAAD,OAAKC,GAAL,MACXC,aAAa,GAAD,OAAKD,GAAL,MACZE,cAAc,GAAD,OAAKF,GAAL,MACbG,MAAM,GAAD,OAdM,EAcN,MACLC,OAAO,GAAD,OAAKJ,GAAL,MACNK,QAAQ,GAAD,OAAKL,GAAL,MACPM,UAAU,GAAD,OAAKN,EAAL,MACTO,WAAW,GAAD,OAAMP,EAAN,MACVQ,YAAY,GAAD,OAAMR,GAAN,MACXS,aAAa,GAAD,OAAKT,EAAL,MACZU,cAAc,GAAD,OAAMV,EAAN,MACbW,eAAe,GAAD,OAAMX,EAAN,OCnBHY,EAAM5B,IAAO6B,IAAV,gNAEHf,EAAOK,MAITN,EACIC,EAAOM,OAGXP,EACIC,EAAOO,SAITS,EAAY9B,YAAO4B,EAAP5B,CAAH,wCAIT+B,EAAM/B,IAAO6B,IAAV,8FAMHG,EAAYhC,IAAO6B,IAAV,4IAETf,EAAOQ,UAETT,EACIC,EAAOS,WAGXV,EACIC,EAAOU,aAITS,EAAgBjC,IAAO6B,IAAV,4IAEbf,EAAOW,aAETZ,EACIC,EAAOY,cAGXb,EACIC,EAAOa,gBCrChBO,EAAalC,IAAO6B,IAAV,oIAUVM,EAAcnC,IAAO6B,IAAV,mIAUXO,EAAYpC,IAAOqC,IAAV,sGAMTC,EAAYtC,YAAO4B,EAAP5B,CAAH,mEAaTuC,EAAO,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,SAAUvC,EAA0B,EAA1BA,SAC9BwC,EAAc,SAACC,GACnBA,EAAEC,iBACFD,EAAEE,mBAcJ,OACE,cAACZ,EAAD,CACEa,OAAQ,SAACH,GAAD,OAbO,SAACA,GAClBA,EAAEC,iBACFH,GACEA,EAAS,CACPM,KAAMP,EACND,KACAS,OAAQL,EAAEM,aAAaC,QAAQ,mBAEnCP,EAAEE,kBAKqBM,CAAWR,IAChCS,WAAY,SAACT,GAAD,OAAaD,EAAYC,IACrCU,YAAa,SAACV,GAAD,OAAaD,EAAYC,IACtCW,YAAa,SAACX,GAAD,OAAaD,EAAYC,IAJxC,SAMGzC,KAYDqD,EAAW,SAAC,GAAqD,IAAnDhB,EAAkD,EAAlDA,GAAIE,EAA8C,EAA9CA,SAAUe,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,MAA2B,EAC1CC,mBAASD,GADiC,mBAC7DE,EAD6D,KACtDC,EADsD,KAKpE,OACE,qCACE,cAAC,EAAD,CAAMrB,GAAIA,EAAV,SACE,+BACGiB,EACC,sBAAMpD,QAPG,kBAAMqC,EAAS,CAAEM,KAAMtC,EAAY8B,KAAIkB,MAAOE,KAOvD,0BAEA,sBAAMvD,QAVE,kBAAMqC,EAAS,CAAEM,KAAMvC,EAAM+B,QAUrC,0BAEF,sBAAMnC,QAAS,kBAAMqC,EAAS,CAAEM,KAAMpC,EAAY4B,QAAlD,6CAKJ,cAACL,EAAD,UACGsB,EACC,uBACEK,YAAY,OACZF,MAAOA,EACPG,SAAU,SAACnB,GAAD,OAAOiB,EAASjB,EAAEoB,OAAOJ,UAGrC,6BAAKF,UAYFO,EAAY,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMxB,EAA+B,EAA/BA,SAGhC,OACE,qCACE,cAACJ,EAAD,UAJc,CAAC,GAAI,GAAI,SAAU,SAKpB6B,KAAI,SAACC,EAAMC,GAAP,OACb,qCACS,IAANA,GAAW,cAACpC,EAAD,IACZ,cAAC,EAAD,CAAMO,GAAI4B,EAAV,SACE,6BAAKA,cAKZF,EAAKI,KAAKH,KAAI,WAA8CE,GAAO,IAAlD7B,EAAiD,EAAjDA,GAAIkB,EAA6C,EAA7CA,MAAOa,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,SAAUf,EAAiB,EAAjBA,QAChD,OACE,eAACnB,EAAD,CAAW+B,EAAGA,EAAd,UACE,cAAC,EAAD,CACE7B,GAAIA,EACJE,SAAUA,EACVe,QAASA,EACTC,MAAOA,IAET,cAACzB,EAAD,IACA,cAAC,EAAD,CAAMO,GAAIA,EAAIE,SAAUA,EAAUD,OAAQnC,EAA1C,SACE,cAAC8B,EAAD,CAA2BqC,IAAKF,EAAW/B,GAAI+B,GAA/BA,KAElB,cAACtC,EAAD,IACA,cAAC,EAAD,CAAMO,GAAIA,EAAIE,SAAUA,EAAUD,OAAQlC,EAA1C,SACE,cAAC6B,EAAD,CAA0BqC,IAAKD,EAAUhC,GAAIgC,GAA7BA,OAbEhC,MAkB1B,eAACZ,EAAD,WACE,cAAC,EAAD,CAAMY,GAAG,UAAT,SACE,6BACE,sBAAMnC,QAAS,kBAAMqC,EAAS,CAAEM,KAAMrC,KAAtC,wBAGJ,cAACsB,EAAD,IACA,cAAC,EAAD,CAAMO,GAAG,UAAT,SACE,2CAEF,cAACP,EAAD,IACA,cAAC,EAAD,CAAMO,GAAG,YACT,cAACP,EAAD,IACA,cAAC,EAAD,CAAMO,GAAG,mBCxKXkC,EAAkB1E,IAAO6B,IAAV,qHAOfO,GAAYpC,IAAOqC,IAAV,6FAMFsC,GAAS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OACvB,OACE,cAACF,EAAD,UACGE,EAAOT,KAAI,gBAAGU,EAAH,EAAGA,UAAWC,EAAd,EAAcA,IAAd,OACV,cAAC,GAAD,CAAqBC,IAAKF,EAAWJ,IAAKK,EAAKtC,GAAIsC,GAAnCA,SCtBlBE,GAAWhF,IAAOiF,SAAV,oPAWRC,GAAkBlF,IAAO6B,IAAV,yFAaRsD,GAAQ,SAAC,GAKR,IAJZpB,EAIW,EAJXA,SAIW,IAHXD,mBAGW,MAHG,GAGH,MAFXsB,gBAEW,SADXxB,EACW,EADXA,MAEA,OACE,cAACsB,GAAD,UACE,cAACF,GAAD,CACEV,KAAM,GACNR,YAAaA,EACbC,SAAUA,EACVH,MAAOA,EACPwB,SAAUA,OCzBZC,GAA4B,SAACC,GAAD,OAChCA,EAAKC,MAAMD,EAAKE,YAAY,KAAO,EAAGF,EAAKE,YAAY,OCbnDC,GAAW,iCAEXC,GAAW,SAAC7E,GAChB,OAAQA,GACN,IAAK,SACH,OAAO,IACT,QACE,OAAO,MCYP8E,GAAgB3F,IAAO6B,IAAV,uKAEPf,EAAOC,YAGRF,EACGC,EAAOG,aAGVJ,EACGC,EAAOI,eAIf0E,GAA4B,CAChCtB,KAAM,CAAC,CAAE9B,GAAI,IAAKkB,MAAO,GAAIa,UAAW,GAAIC,SAAU,GAAIf,SAAS,KAG/DoC,GAAU,SAACC,EAAiBrD,GAChC,IAAMsD,EAAQD,EAAMxB,KAAK0B,WAAU,SAACC,GAAD,OAASxD,EAAOD,KAAOyD,EAAIzD,MAC9D,OAAQC,EAAOO,MACb,KAAKrC,EACH,OAAO,2BACFmF,GADL,IAEExB,KAAK,GAAD,mBACCwB,EAAMxB,MADP,CAEF,CACE9B,GAAI0D,cACJxC,MAAO,GACPa,UAAW,GACXC,SAAU,GACVf,SAAS,OAIjB,KAAK7C,EACH,OAAO,2BACFkF,GADL,IAEExB,KAAMwB,EAAMxB,KAAK6B,QAAO,SAACF,GAAD,OAASA,EAAIzD,KAAOC,EAAOD,QAEvD,KAAK/B,EAKH,OAJAqF,EAAMxB,KAAKyB,GAAX,2BACKD,EAAMxB,KAAKyB,IADhB,IAEEtC,SAAS,IAEJ,eAAKqC,GACd,KAAKpF,EAMH,OALAoF,EAAMxB,KAAKyB,GAAX,2BACKD,EAAMxB,KAAKyB,IADhB,IAEErC,MAAOjB,EAAOiB,MACdD,SAAS,IAEJ,eAAKqC,GACd,KAAKxF,EAEH,OADAwF,EAAMxB,KAAKyB,GAAX,2BAAyBD,EAAMxB,KAAKyB,IAApC,IAA4CxB,UAAW9B,EAAOQ,SACvD,eAAK6C,GACd,KAAKvF,EAKH,OAJAuF,EAAMxB,KAAKyB,GAAX,2BACKD,EAAMxB,KAAKyB,IADhB,IAEEvB,SAAU/B,EAAOQ,SAEZ,eAAK6C,GACd,KAAKtF,EACH,OAAOoF,GACT,QACE,OAAOE,IAiIEM,GAjHH,WAAO,IAAD,EACSC,qBAAWR,GAASD,IAD7B,mBACT1B,EADS,KACHxB,EADG,OAEYiB,mBAAS,IAFrB,mBAETiB,EAFS,KAED0B,EAFC,OAGY3C,mBAAS,IAHrB,mBAGT4C,EAHS,KAGDC,EAHC,OAIQ7C,mBAAS,GAJjB,mBAIT8C,EAJS,KAIHC,EAJG,KAUVC,EAAgB,kBAAMD,EAAQD,EAAO,IACrCG,EAAgB,kBAAMF,EAAQD,EAAO,IAE3C,OACE,qBAAKI,UAAU,MAAf,SACE,eAAClB,GAAD,WACE,cAAC/D,EAAD,UACE,cAACG,EAAD,UACE,8DAGM,IAAT0E,EACC,qCACE,eAAC7E,EAAD,WACE,cAACG,EAAD,IACA,cAACC,EAAD,IACA,cAACD,EAAD,UACE,cAAC,EAAD,CAAQ3B,YAAauG,EAArB,4CAKJ,cAAC/E,EAAD,UACE,eAACG,EAAD,WACE,cAAC,GAAD,CACE+B,YAAY,gCACZC,SA9BI,SAACnB,GACnB0D,EF5F+B,SAACQ,GAAD,OAZFC,EAaPD,EAZxBC,EACGC,MAAM,KACN7C,KAAI,SAAC8C,GAAD,OAAUA,EAAKC,UACnBf,QAAO,SAACc,GAAD,OAAUA,MASe9C,KAAI,SAAC8C,GAAD,MAAW,CAChDpC,WARuBS,EAQM2B,EAP/B3B,EAAKC,MAAMD,EAAK6B,QAAQ,KAAO,EAAG7B,EAAKE,YAAY,OAQjDV,IAAKO,GAA0B4B,IATT,IAAC3B,KANK,IAACyB,EEwGnBK,CAAoBxE,EAAEoB,OAAOJ,aA+BxBgB,EAAOyC,QACR,qCACE,wCACA,cAAC,GAAD,CAAQzC,OAAQA,eAMf,IAAT6B,EACF,qCACE,eAAC7E,EAAD,CAAK0F,OAAQ,OAAb,UACE,cAACvF,EAAD,UACE,cAAC,EAAD,CAAQ3B,YAAawG,EAArB,wCAIF,cAAC5E,EAAD,IACA,cAACD,EAAD,UACE,cAAC,EAAD,CACE3B,YAAa,WACXuG,IACAH,EDrJe,WAYjC,OAZoE,uDAAjB,CAAElC,KAAM,KAClCA,KAAKH,KAAI,SAAC8B,GAAS,IAClC1B,EAAwB0B,EAAxB1B,UAAWC,EAAayB,EAAbzB,SACb+C,EAAQ7B,GAAS,UACvB,MAAM,IAAN,OAAWO,EAAIvC,MAAf,sBAAkCa,EAAlC,oBAAuDgD,EAAvD,0BAA8E/C,EAA9E,oBAAkG+C,EAAlG,YAGyBC,QACzB,SAACjB,EAAQN,GAAT,OAAiBM,EAAM,KAAUN,IACjCR,IC4I0BgC,CAAoBvD,KAHlC,+CAUJ,eAACpC,EAAD,WACE,cAACC,EAAD,UACE,cAAC,GAAD,CAAQ6C,OAAQA,MAElB,cAAC5C,EAAD,IACA,cAACD,EAAD,UACE,cAAC,EAAD,CAAWmC,KAAMA,EAAMxB,SAAUA,YAI5B,IAAT+D,EACF,qCACE,eAAC7E,EAAD,WACE,cAACG,EAAD,UACE,cAAC,EAAD,CAAQ3B,YAAawG,EAArB,uCAIF,cAAC5E,EAAD,IACA,cAACD,EAAD,UACE,cAAC,EAAD,CACE3B,YAAa,WACXsC,EAAS,CAAEM,KAAMxC,IACjBkG,EAAQ,IAHZ,0CAUJ,cAAC9E,EAAD,UACE,cAACG,EAAD,UACE,cAAC,GAAD,CACE+B,YAAY,+BACZF,MAAO2C,EACPnB,UAAQ,WAKd,WCnMGsC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.b45e7262.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  padding: 0.35em 1.2em;\n  border: 0.1em solid #000000;\n  border-radius: 0.12em;\n  box-sizing: border-box;\n  text-align: center;\n  transition: all 0.2s;\n  width: 100%;\n  font-size: inherit;\n  font-family: inherit;\n\n  :hover {\n    color: #000000;\n    background-color: #ffffff;\n  }\n`;\n\nexport const Button = ({ children, handleClick }) => (\n  <StyledButton onClick={handleClick}>{children}</StyledButton>\n);\n","export const ADD_BEFORE_IMG = 'ADD_BEFORE_IMG';\nexport const ADD_AFTER_IMG = 'ADD_AFTER_IMG';\nexport const RESET = 'RESET';\nexport const EDIT = 'EDIT';\nexport const EDIT_ENDED = 'EDIT_ENDED';\nexport const ADD_ROW = 'ADD_ROW';\nexport const DELETE_ROW = 'DELETE_ROW';\n","const BASE = 8;\n\nexport const device = {\n  forPhoneOnly: '(max-width: 599px)',\n  forTabletPortraitUp: '(min-width: 600px)',\n  forTabletLandscapeUp: '(min-width: 900px)',\n  forDesktopUp: '(min-width: 1200px)',\n  forBigDesktopUp: '(min-width: 1800px)',\n};\n\nexport const margin = {\n  phoneDouble: `${BASE * 2}px`,\n  tabletDouble: `${BASE * 2 * 2}px`,\n  desktopDouble: `${BASE * 3 * 2}px`,\n  phone: `${BASE}px`,\n  tablet: `${BASE * 2}px`,\n  desktop: `${BASE * 3}px`,\n  phoneHalf: `${BASE / 2}px`,\n  tabletHalf: `${(BASE / 2) * 2}px`,\n  desktopHalf: `${(BASE / 2) * 3}px`,\n  phoneQuarter: `${BASE / 4}px`,\n  tabletQuarter: `${(BASE / 4) * 2}px`,\n  desktopQuarter: `${(BASE / 4) * 3}px`,\n};\n","import styled from 'styled-components';\nimport { device, margin } from '../styles';\n\nexport const Row = styled.div`\n  display: flex;\n  padding: ${margin.phone} 0;\n  align-items: flex-start;\n  justify-content: center;\n\n  @media ${device.forTabletPortraitUp} {\n    padding: ${margin.tablet} 0;\n  }\n\n  @media ${device.forDesktopUp} {\n    padding: ${margin.desktop} 0;\n  }\n`;\n\nexport const BottomRow = styled(Row)`\n  flex: 1;\n`;\n\nexport const Col = styled.div`\n  align-items: flex-end;\n  justify-content: center;\n  flex: 1;\n`;\n\nexport const ColSpacer = styled.div`\n  flex: 0;\n  padding: ${margin.phoneHalf};\n\n  @media ${device.forTabletPortraitUp} {\n    padding: ${margin.tabletHalf};\n  }\n\n  @media ${device.forDesktopUp} {\n    padding: ${margin.desktopHalf};\n  }\n`;\n\nexport const ColSpacerMini = styled.div`\n  flex: 0;\n  padding: ${margin.phoneQuarter};\n\n  @media ${device.forTabletPortraitUp} {\n    padding: ${margin.tabletQuarter};\n  }\n\n  @media ${device.forDesktopUp} {\n    padding: ${margin.desktopQuarter};\n  }\n`;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { CellData } from '../App';\nimport {\n  ADD_AFTER_IMG,\n  ADD_BEFORE_IMG,\n  ADD_ROW,\n  DELETE_ROW,\n  EDIT,\n  EDIT_ENDED,\n} from '../utils/constants';\nimport { ColSpacerMini, Row } from './Grid';\n\nconst StyledCell = styled.div`\n  font-size: inherit;\n  font-family: inherit;\n\n  flex: 1;\n  width: 100%;\n\n  align-self: stretch;\n`;\n\nconst StyledTitle = styled.div`\n  font-size: inherit;\n  font-family: inherit;\n\n  flex: 1;\n  width: 100%;\n\n  align-self: center;\n`;\n\nconst StyledImg = styled.img`\n  box-sizing: border-box;\n  max-width: 100%;\n  vertical-align: bottom;\n`;\n\nconst BorderRow = styled(Row)`\n  border-bottom: 1px solid Gainsboro;\n`;\n\ntype CellProps = {\n  id: string;\n  action?: string;\n  dispatch?: React.Dispatch<any>;\n  children?: JSX.Element[] | JSX.Element | string;\n};\n\ntype Drag = React.DragEvent<HTMLDivElement>;\n\nconst Cell = ({ id, action, dispatch, children }: CellProps) => {\n  const defaultDrag = (e: Drag) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: Drag) => {\n    e.preventDefault();\n    dispatch &&\n      dispatch({\n        type: action,\n        id,\n        imgSrc: e.dataTransfer.getData('text/uri-list'),\n      });\n    e.stopPropagation();\n  };\n\n  return (\n    <StyledCell\n      onDrop={(e: Drag) => handleDrop(e)}\n      onDragOver={(e: Drag) => defaultDrag(e)}\n      onDragEnter={(e: Drag) => defaultDrag(e)}\n      onDragLeave={(e: Drag) => defaultDrag(e)}\n    >\n      {children}\n    </StyledCell>\n  );\n};\n\ntype RowTitleProps = {\n  id: string;\n  dispatch: React.Dispatch<any>;\n  editing: boolean;\n  title: string;\n};\n\nconst RowTitle = ({ id, dispatch, editing, title }: RowTitleProps) => {\n  const [value, setValue] = useState(title);\n  const startEdit = () => dispatch({ type: EDIT, id });\n  const finishEdit = () => dispatch({ type: EDIT_ENDED, id, title: value });\n\n  return (\n    <>\n      <Cell id={id}>\n        <h3>\n          {editing ? (\n            <span onClick={finishEdit}>&#128190;</span>\n          ) : (\n            <span onClick={startEdit}>&#9999;&#65039;</span>\n          )}\n          <span onClick={() => dispatch({ type: DELETE_ROW, id })}>\n            &nbsp;&nbsp;&#128465;&#65039;\n          </span>\n        </h3>\n      </Cell>\n      <StyledTitle>\n        {editing ? (\n          <input\n            placeholder=\"Name\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n        ) : (\n          <h3>{title}</h3>\n        )}\n      </StyledTitle>\n    </>\n  );\n};\n\ntype DropTableProps = {\n  data: CellData;\n  dispatch: React.Dispatch<any>;\n};\n\nexport const DropTable = ({ data, dispatch }: DropTableProps) => {\n  const headerRow = ['', '', 'Before', 'After'];\n\n  return (\n    <>\n      <BorderRow>\n        {headerRow.map((name, i) => (\n          <>\n            {i !== 0 && <ColSpacerMini />}\n            <Cell id={name}>\n              <h3>{name}</h3>\n            </Cell>\n          </>\n        ))}\n      </BorderRow>\n      {data.rows.map(({ id, title, beforeImg, afterImg, editing }, i) => {\n        return (\n          <BorderRow i={i} key={id}>\n            <RowTitle\n              id={id}\n              dispatch={dispatch}\n              editing={editing}\n              title={title}\n            />\n            <ColSpacerMini />\n            <Cell id={id} dispatch={dispatch} action={ADD_BEFORE_IMG}>\n              <StyledImg key={beforeImg} src={beforeImg} id={beforeImg} />\n            </Cell>\n            <ColSpacerMini />\n            <Cell id={id} dispatch={dispatch} action={ADD_AFTER_IMG}>\n              <StyledImg key={afterImg} src={afterImg} id={afterImg} />\n            </Cell>\n          </BorderRow>\n        );\n      })}\n      <Row>\n        <Cell id=\"addRow1\">\n          <h3>\n            <span onClick={() => dispatch({ type: ADD_ROW })}>&#10133;</span>\n          </h3>\n        </Cell>\n        <ColSpacerMini />\n        <Cell id=\"addRow2\">\n          <h3>Add Row</h3>\n        </Cell>\n        <ColSpacerMini />\n        <Cell id=\"addRow3\"></Cell>\n        <ColSpacerMini />\n        <Cell id=\"addRow4\"></Cell>\n      </Row>\n    </>\n  );\n};\n","import { ImageData } from '../utils/parsing';\nimport styled from 'styled-components';\n\ntype Props = {\n  images: ImageData[];\n};\n\nconst ImagesContainer = styled.div`\n  text-align: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst StyledImg = styled.img`\n  margin: 16px;\n  max-height: 30vh;\n  vertical-align: bottom;\n`;\n\nexport const Images = ({ images }: Props) => {\n  return (\n    <ImagesContainer>\n      {images.map(({ imageName, url }) => (\n        <StyledImg key={url} alt={imageName} src={url} id={url} />\n      ))}\n    </ImagesContainer>\n  );\n};\n","import styled from 'styled-components';\n\nconst TextArea = styled.textarea`\n  font-size: inherit;\n  font-family: inherit;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  width: 100%;\n  border: 0.1em solid #000000;\n  border-radius: 0.12em;\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\ntype Props = {\n  onChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  placeholder?: string;\n  readOnly?: boolean;\n  value?: string;\n};\n\nexport const Input = ({\n  onChange,\n  placeholder = '',\n  readOnly = false,\n  value,\n}: Props) => {\n  return (\n    <StyledContainer>\n      <TextArea\n        rows={10}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        readOnly={readOnly}\n      />\n    </StyledContainer>\n  );\n};\n","export type ImageData = {\n  imageName: string;\n  url: string;\n};\n\nconst getArrayOfMarkdownLinks = (textInput: string) =>\n  textInput\n    .split('!')\n    .map((text) => text.trim())\n    .filter((text) => text);\n\nconst getTextInBrackets = (item: string) =>\n  item.slice(item.indexOf('[') + 1, item.lastIndexOf(']'));\n\nconst getTextInFinalParentheses = (item: string) =>\n  item.slice(item.lastIndexOf('(') + 1, item.lastIndexOf(')'));\n\nexport const extractNamesAndUrls = (inputText: string): ImageData[] =>\n  getArrayOfMarkdownLinks(inputText).map((text) => ({\n    imageName: getTextInBrackets(text),\n    url: getTextInFinalParentheses(text),\n  }));\n","import { CellData } from '../App';\n\nconst HEADER_ROWS = `||Before|After|\\n|---|---|---|`;\n\nconst getWidth = (device: string) => {\n  switch (device) {\n    case 'Mobile':\n      return 250;\n    default:\n      return 325;\n  }\n};\n\nexport const createMarkdownTable = (data: CellData = { rows: [] }) => {\n  const rowMarkdown = data.rows.map((row) => {\n    const { beforeImg, afterImg } = row;\n    const width = getWidth('Mobile');\n    return `|${row.title}|<img src=\"${beforeImg}\" width=\"${width}\" />|<img src=\"${afterImg}\" width=\"${width}\" />|`;\n  });\n\n  const output = rowMarkdown.reduce(\n    (output, row) => output + `\\n` + row,\n    HEADER_ROWS\n  );\n\n  return output;\n};\n","import React, { useReducer, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport styled from 'styled-components';\nimport { Button } from './components/Button';\nimport { DropTable } from './components/DropTable';\nimport { Col, Row, ColSpacer, BottomRow } from './components/Grid';\nimport { Images } from './components/Images';\nimport { Input } from './components/Input';\nimport { device, margin } from './styles';\nimport {\n  ADD_AFTER_IMG,\n  ADD_BEFORE_IMG,\n  ADD_ROW,\n  DELETE_ROW,\n  EDIT,\n  EDIT_ENDED,\n  RESET,\n} from './utils/constants';\nimport { extractNamesAndUrls, ImageData } from './utils/parsing';\nimport { createMarkdownTable } from './utils/table';\n\nconst BodyContainer = styled.div`\n  display: block;\n  margin: ${margin.phoneDouble};\n  text-align: center;\n\n  @media ${device.forTabletPortraitUp} {\n    margin: ${margin.tabletDouble};\n  }\n\n  @media ${device.forDesktopUp} {\n    margin: ${margin.desktopDouble};\n  }\n`;\n\nconst initialCellData: CellData = {\n  rows: [{ id: '1', title: '', beforeImg: '', afterImg: '', editing: true }],\n};\n\nconst reducer = (state: CellData, action) => {\n  const index = state.rows.findIndex((row) => action.id === row.id);\n  switch (action.type) {\n    case ADD_ROW:\n      return {\n        ...state,\n        rows: [\n          ...state.rows,\n          {\n            id: nanoid(),\n            title: '',\n            beforeImg: '',\n            afterImg: '',\n            editing: true,\n          },\n        ],\n      };\n    case DELETE_ROW:\n      return {\n        ...state,\n        rows: state.rows.filter((row) => row.id !== action.id),\n      };\n    case EDIT:\n      state.rows[index] = {\n        ...state.rows[index],\n        editing: true,\n      };\n      return { ...state };\n    case EDIT_ENDED:\n      state.rows[index] = {\n        ...state.rows[index],\n        title: action.title,\n        editing: false,\n      };\n      return { ...state };\n    case ADD_BEFORE_IMG:\n      state.rows[index] = { ...state.rows[index], beforeImg: action.imgSrc };\n      return { ...state };\n    case ADD_AFTER_IMG:\n      state.rows[index] = {\n        ...state.rows[index],\n        afterImg: action.imgSrc,\n      };\n      return { ...state };\n    case RESET:\n      return initialCellData;\n    default:\n      return state;\n  }\n};\n\nexport type CellData = {\n  rows: RowData[];\n};\n\ntype RowData = {\n  id: string;\n  title: string;\n  beforeImg: string;\n  afterImg: string;\n  editing: boolean;\n};\n\nconst App = () => {\n  const [data, dispatch] = useReducer(reducer, initialCellData);\n  const [images, setImages] = useState([] as ImageData[]);\n  const [output, setOutput] = useState('');\n  const [page, setPage] = useState(1);\n\n  const handleInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setImages(extractNamesAndUrls(e.target.value));\n  };\n\n  const incrementPage = () => setPage(page + 1);\n  const decrementPage = () => setPage(page - 1);\n\n  return (\n    <div className=\"App\">\n      <BodyContainer>\n        <Row>\n          <Col>\n            <h1>Markdown Table Generator</h1>\n          </Col>\n        </Row>\n        {page === 1 ? (\n          <>\n            <Row>\n              <Col></Col>\n              <ColSpacer />\n              <Col>\n                <Button handleClick={incrementPage}>\n                  Create Table &#128073;\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  placeholder=\"Paste Github image links here\"\n                  onChange={handleInput}\n                />\n                {!!images.length && (\n                  <>\n                    <h1>Images</h1>\n                    <Images images={images} />\n                  </>\n                )}\n              </Col>\n            </Row>\n          </>\n        ) : page === 2 ? (\n          <>\n            <Row height={'30px'}>\n              <Col>\n                <Button handleClick={decrementPage}>\n                  &#128072; Edit Upload\n                </Button>\n              </Col>\n              <ColSpacer />\n              <Col>\n                <Button\n                  handleClick={() => {\n                    incrementPage();\n                    setOutput(createMarkdownTable(data));\n                  }}\n                >\n                  Export Markdown &#128073;\n                </Button>\n              </Col>\n            </Row>\n            <BottomRow>\n              <Col>\n                <Images images={images} />\n              </Col>\n              <ColSpacer />\n              <Col>\n                <DropTable data={data} dispatch={dispatch} />\n              </Col>\n            </BottomRow>\n          </>\n        ) : page === 3 ? (\n          <>\n            <Row>\n              <Col>\n                <Button handleClick={decrementPage}>\n                  &#128072; Edit Table\n                </Button>\n              </Col>\n              <ColSpacer />\n              <Col>\n                <Button\n                  handleClick={() => {\n                    dispatch({ type: RESET });\n                    setPage(1);\n                  }}\n                >\n                  Start Over &#128073;\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  placeholder=\"Markdown output appears here\"\n                  value={output}\n                  readOnly\n                />\n              </Col>\n            </Row>\n          </>\n        ) : null}\n      </BodyContainer>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}